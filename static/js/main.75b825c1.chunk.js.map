{"version":3,"sources":["App.scss","components/Header.jsx","components/Search.jsx","components/Example.jsx","components/FontSize.jsx","components/Nav.jsx","config.js","components/Card.jsx","components/Main.jsx","App.jsx","serviceWorker.js","index.jsx","css/_global.scss"],"names":["module","exports","Header","className","style","fontWeight","fontSize","type","href","Search","props","query","handleChange","handleDelete","buttonStyle","visibility","trim","id","placeholder","autoComplete","value","onChange","onClick","defaultProps","Example","example","FontSize","handleMenuClick","showMenu","state","setState","handleOptionClick","this","menuStyle","caratStyle","transform","menuButtonStyle","cond","backgroundColor","styles","paleAccent","color","brightAccent","options","map","size","key","e","min","max","Component","Nav","navFull","changeSearch","deleteQuery","changeExample","changeFontSize","reset","majorNavRef","navStyle","width","marginLeft","marginRight","padding","position","top","borderTop","borderBottom","boxShadow","ref","border","config","KEY","DEFAULT_TEXT","Card","updateText","text","innerTrimmed","split","join","displayed","prevProps","name","numStyles","textStyle","fontFamily","contentEditable","suppressContentEditableWarning","textArea","Main","rendering","fonts","axios","get","then","res","data","items","forEach","font","formattedName","family","replace","defaultVariant","variants","includes","link","document","createElement","rel","head","appendChild","catch","console","log","filtered","filter","toLowerCase","fontCards","fontKey","cardComponent","length","mainDisplay","DEFAULTS","search","exampleText","App","handleScroll","navTop","target","documentElement","scrollTop","body","handleChangeSearch","input","window","scrollTo","handleChangeExample","handleChangeFontSize","newSize","handleReset","handleToTop","majorNav","React","createRef","addEventListener","current","getBoundingClientRect","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75b825c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lighterGray\":\"#b8b8b8\",\"brightAccent\":\"#ff5252\",\"paleAccent\":\"rgba(255,82,82,0.16)\"};","import React from 'react';\n\n// Implement minor header\nfunction Header() {\n  return (\n    <div className=\"minor-nav\">\n      <div>\n        <span style={{ fontWeight: 500, fontSize: '1.45em' }}>Google</span>\n        <span>Fonts</span>\n      </div>\n      <ul>\n        <li>\n          <button type=\"button\" href=\"#\">CATALOG</button>\n        </li>\n        <li>\n          <button type=\"button\" href=\"#\">FEATURED</button>\n        </li>\n        <li>\n          <button type=\"button\" href=\"#\">ARTICLES</button>\n        </li>\n        <li>\n          <button type=\"button\" href=\"#\">ABOUT</button>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Implement search bar\nfunction Search(props) {\n  const { query, handleChange, handleDelete } = props;\n  const buttonStyle = { visibility: (query.trim()) ? 'visible' : 'hidden' };\n  return (\n    <li className=\"search\">\n      <i className=\"fas fa-search\" />\n      <input id=\"search\" type=\"text\" placeholder=\"Search fonts\" autoComplete=\"off\" value={query} onChange={handleChange} />\n      <button id=\"reset-query\" className=\"icon-btn\" type=\"button\" style={buttonStyle} onClick={handleDelete}>\n        <i className=\"fas fa-times\" />\n      </button>\n    </li>\n  );\n}\n\n// Set defaults\nSearch.defaultProps = {\n  query: '',\n  handleChange: () => {},\n  handleDelete: () => {},\n};\n\n// Define propTypes\nSearch.propTypes = {\n  query: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleDelete: PropTypes.func,\n};\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Implement example text box\nfunction Example(props) {\n  const { example, handleChange } = props;\n  return (\n    <li className=\"example\">\n      <input id=\"exampleBox\" type=\"text\" placeholder=\"Type something\" onChange={handleChange} value={example} />\n    </li>\n  );\n}\n\n// Set defaults\nExample.defaultProps = {\n  example: '',\n  handleChange: () => {},\n};\n\n// Define propTypes\nExample.propTypes = {\n  example: PropTypes.string,\n  handleChange: PropTypes.func,\n};\n\nexport default Example;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../css/_global.scss';\n\n// Implement font size controls\nclass FontSize extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMenu: false,\n    };\n  }\n\n  // Show font sizes menu when font size display is clicked\n  handleMenuClick = () => {\n    const { showMenu } = this.state;\n    this.setState({\n      showMenu: !showMenu,\n    });\n  }\n\n  handleOptionClick = () => {\n    this.setState({\n      showMenu: false,\n    });\n  }\n\n  render() {\n    const { fontSize, handleChange } = this.props;\n    const { showMenu } = this.state;\n    const menuStyle = { visibility: showMenu ? 'visible' : 'hidden' };\n    const caratStyle = { transform: showMenu ? 'rotate(180deg)' : '' };\n    const menuButtonStyle = (cond) => ({\n      backgroundColor: cond ? styles.paleAccent : '',\n      color: cond ? styles.brightAccent : '',\n    });\n    const defaultSizes = ['8', '12', '14', '20', '24', '32', '40', '64', '96', '120', '184', '280'];\n    const options = defaultSizes.map((size) => (\n      <li key={size}>\n        <button\n          type=\"button\"\n          onClick={(e) => { handleChange(e, size); this.handleOptionClick(e); }}\n          style={menuButtonStyle(size === fontSize)}\n        >\n          <span style={{ fontWeight: '600' }}>{size}</span>\n        </button>\n      </li>\n    ));\n    return (\n      <li className=\"font-size\">\n        <div>\n          <button id=\"fontSize\" type=\"button\" style={menuButtonStyle(showMenu)} onClick={this.handleMenuClick}>\n            <span id=\"currentSize\" style={{ fontWeight: 600 }}>{`${fontSize}px`}</span>\n            <i className=\"fas fa-caret-down\" style={caratStyle} />\n          </button>\n          <div id=\"sizeMenu\" className=\"options-container\" style={menuStyle}>\n            <ul className=\"size-options\">\n              {options}\n            </ul>\n          </div>\n        </div>\n        <input id=\"slider\" type=\"range\" min=\"8\" max=\"300\" value={fontSize} onChange={(e) => handleChange(e, '')} />\n      </li>\n    );\n  }\n}\n\n// Set defaults\nFontSize.defaultProps = {\n  fontSize: '40',\n  handleChange: () => {},\n};\n\n// Define propTypes\nFontSize.propTypes = {\n  fontSize: PropTypes.string,\n  handleChange: PropTypes.func,\n};\n\nexport default FontSize;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Search from './Search';\nimport Example from './Example';\nimport FontSize from './FontSize';\n\n// Implement major header\nfunction Nav(props) {\n  const {\n    query, example, fontSize, navFull, changeSearch, deleteQuery,\n    changeExample, changeFontSize, reset, majorNavRef,\n  } = props;\n  const navStyle = navFull ? {\n    width: '100%', marginLeft: '0', marginRight: '0', padding: '0 60px', position: 'fixed', top: '0', borderTop: '1px solid lightgray', borderBottom: '1px solid lightgray', boxShadow: '1px 1px 8px lightgray',\n  } : {};\n  return (\n    <nav ref={majorNavRef} style={navStyle}>\n      <ul style={{ border: navFull ? 'none' : '' }}>\n        <Search query={query} handleDelete={deleteQuery} handleChange={changeSearch} />\n        <Example example={example} handleChange={changeExample} />\n        <FontSize fontSize={fontSize} handleChange={changeFontSize} />\n        <li className=\"colorMode\">\n          <button className=\"icon-btn\" type=\"button\">\n            <i className=\"fas fa-fill-drip\" />\n          </button>\n        </li>\n        <li className=\"view\">\n          <button className=\"icon-btn\" type=\"button\">\n            <i className=\"fas fa-list-alt\" />\n          </button>\n        </li>\n        <li className=\"reset\" onClick={reset}>\n          <button className=\"icon-btn\" type=\"button\">\n            <i className=\"fas fa-redo-alt\" />\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\n// Set defaults\nNav.defaultProps = {\n  query: '',\n  example: '',\n  fontSize: '40',\n  navFull: false,\n  changeSearch: () => {},\n  deleteQuery: () => {},\n  changeExample: () => {},\n  changeFontSize: () => {},\n  reset: () => {},\n};\n\n// Define propTypes\nNav.propTypes = {\n  query: PropTypes.string,\n  example: PropTypes.string,\n  fontSize: PropTypes.string,\n  navFull: PropTypes.bool,\n  changeSearch: PropTypes.func,\n  deleteQuery: PropTypes.func,\n  changeExample: PropTypes.func,\n  changeFontSize: PropTypes.func,\n  reset: PropTypes.func,\n};\n\nexport default Nav;\n","const config = {\n  KEY: 'AIzaSyACV13V4GEhdIurbJX6yalQ2n1pF2SVH3Y',\n};\n\nexport default config;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst DEFAULT_TEXT = 'Then came the night of the first falling star.';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayed: DEFAULT_TEXT,\n    };\n  }\n\n  // If component is lazy-loaded and user has typed in the \"Type something box\",\n  // display this text instead of default\n  componentDidMount() {\n    const { text } = this.props;\n    if (text !== DEFAULT_TEXT) {\n      this.updateText(text);\n    }\n  }\n\n  // If user has typed in the \"Type something box\", display this text on the card\n  componentDidUpdate(prevProps) {\n    const { text } = this.props;\n    if (text !== prevProps.text) {\n      this.updateText(text);\n    }\n  }\n\n  // Update displayed text\n  updateText = (text) => {\n    const innerTrimmed = text.split(/\\s+/).join(' ');\n    this.setState({\n      displayed: innerTrimmed || DEFAULT_TEXT,\n    });\n  }\n\n  render() {\n    const {\n      name, size, numStyles,\n    } = this.props;\n    const { displayed } = this.state;\n    const textStyle = {\n      fontSize: `${size}px`,\n      fontFamily: `${name}, sans-serif`,\n    };\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <div>\n            <span className=\"font-name\">{name}</span>\n            <span className=\"num-styles\">\n              {numStyles}\n              {' '}\n  styles\n            </span>\n          </div>\n          <button type=\"button\">\n            <span>+</span>\n          </button>\n        </div>\n        <div className=\"text-container\" contentEditable=\"true\" suppressContentEditableWarning style={textStyle} ref={this.textArea}>{displayed}</div>\n      </div>\n    );\n  }\n}\n\nCard.defaultProps = {\n  name: '',\n  text: '',\n  size: '40',\n  numStyles: 0,\n};\n\nCard.propTypes = {\n  name: PropTypes.string,\n  text: PropTypes.string,\n  size: PropTypes.string,\n  numStyles: PropTypes.number,\n};\n\nexport default Card;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LazyLoad from 'react-lazyload';\nimport axios from 'axios';\nimport config from '../config';\nimport Card from './Card';\n\n// Implement stateful App component\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rendering: true,\n      fonts: [],\n    };\n  }\n\n  // Fetch font information\n  componentDidMount() {\n    return axios.get(`https://www.googleapis.com/webfonts/v1/webfonts?key=${config.KEY}&sort=popularity`)\n      .then((res) => {\n        const fonts = res.data.items;\n        // Import fonts into index.html\n        fonts.forEach((font) => {\n          const formattedName = font.family.replace(/\\s+/g, '+');\n          const defaultVariant = (font.variants.includes('regular')) ? '' : `:${font.variants[0]}`;\n          const link = document.createElement('link');\n          link.rel = 'stylesheet';\n          link.href = `https://fonts.googleapis.com/css?family=${formattedName}${defaultVariant}&display=swap`;\n          document.head.appendChild(link);\n        });\n        // Store font information\n        this.setState({\n          rendering: false,\n          fonts,\n        });\n      })\n      .catch((res) => {\n        console.log('Error: fonts not loaded');\n      });\n  }\n\n  render() {\n    const { rendering, fonts } = this.state;\n    const { query, example, fontSize } = this.props;\n    // Filter font list based on search query\n    const filtered = fonts\n      .filter((font) => font.family.toLowerCase().includes(query.toLowerCase()));\n    const fontCards = filtered.map((font) => {\n      const fontKey = font.family.replace(/\\s+/g, '-').toLowerCase();\n      const cardComponent = (\n        <Card\n          key={fontKey}\n          name={font.family}\n          text={example}\n          size={fontSize}\n          numStyles={font.variants.length}\n        />\n      );\n        // Lazy load font cards to boost performance when 30 or more cards are present\n      return (filtered.length <= 50) ? cardComponent\n        : <LazyLoad key={fontKey} placeholder={<div />}>{cardComponent}</LazyLoad>;\n    });\n    // Display font cards or, if none match the search query, a \"No results\" page\n    const mainDisplay = rendering\n      ? (\n        <div className=\"loading-screen\">\n          <p>Loading fonts...</p>\n          <i className=\"fas fa-spinner fa-pulse\" />\n        </div>\n      ) : fontCards.length ? fontCards : (\n        <div className=\"no-results\">\n          <span>{'(>_<)'}</span>\n          <p>No fonts found!</p>\n        </div>\n      );\n    return (\n      <main>\n        <p style={{ visibility: rendering ? 'hidden' : 'visible' }}>\nViewing\n          {' '}\n          <span>{fontCards.length}</span>\n          {' '}\nof\n          {' '}\n          {fonts.length}\n          {' '}\nfont families\n        </p>\n        <div className=\"font-grid\">\n          {mainDisplay}\n        </div>\n      </main>\n    );\n  }\n}\n\nMain.defaultProps = {\n  query: '',\n  example: '',\n  fontSize: '40',\n};\n\nMain.propTypes = {\n  query: PropTypes.string,\n  example: PropTypes.string,\n  fontSize: PropTypes.string,\n};\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from './components/Header';\nimport Nav from './components/Nav';\nimport Main from './components/Main';\n\nconst DEFAULTS = {\n  search: '',\n  exampleText: '',\n  fontSize: '40',\n  navFull: false,\n};\n\n// Implement stateful App component\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = DEFAULTS;\n    this.majorNav = React.createRef();\n  }\n\n  // Add scroll event listener\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    window.addEventListener('scroll', this.handleScroll);\n    this.setState({\n      navTop: this.majorNav.current.getBoundingClientRect().top,\n      navFull: false,\n    });\n  }\n\n  // Clean up event listeners\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  // Change major nav appearance and scroll to top button visbility on scroll\n  handleScroll = (e) => {\n    const { navTop } = this.state;\n    const scrollTop = (e.target.documentElement.scrollTop || e.target.body.scrollTop);\n    if (scrollTop >= navTop) {\n      this.setState({\n        navFull: true,\n      });\n    } else {\n      this.setState({\n        navFull: false,\n      });\n    }\n  }\n\n\n  // Update search query when user types in search bar\n    handleChangeSearch = (e) => {\n      const input = e.target.value;\n      const { search } = this.state;\n      // Scroll to top if input has changed (including whitespace)\n      if (input.trim() !== search.trim()) {\n        window.scrollTo(0, 0);\n      }\n      // Update state only if user input is different from previous input\n      if (input !== search) {\n        this.setState({\n          search: input,\n        });\n      }\n    }\n\n    // Delete search query when user clicks delete button\n    handleDelete = () => {\n      this.setState({\n        search: '',\n      });\n    }\n\n  // Update example text when user types in \"Type something\" box\n  handleChangeExample = (e) => {\n    const input = e.target.value;\n    const { exampleText } = this.state;\n    // Update state only if user input is different from previous input\n    if (input !== exampleText) {\n      this.setState({\n        exampleText: input,\n      });\n    }\n  }\n\n  // Update font size on user input (slider or menu selection)\n  handleChangeFontSize = (e, newSize) => {\n    this.setState({\n      fontSize: newSize || e.target.value,\n    });\n  }\n\n  // Reset to display all font cards sorted by popularity with default example text\n  handleReset = () => {\n    window.scrollTo(0, 0);\n    this.setState(DEFAULTS);\n  }\n\n  // Scroll to top of page\n  handleToTop = () => {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const {\n      search, exampleText, fontSize, navFull,\n    } = this.state;\n    return (\n      <div className=\"app\">\n        <header>\n          <Header />\n          <div className=\"nav-container\">\n            <Nav\n              query={search}\n              example={exampleText}\n              fontSize={fontSize}\n              navFull={navFull}\n              changeSearch={this.handleChangeSearch}\n              deleteQuery={this.handleDelete}\n              changeExample={this.handleChangeExample}\n              changeFontSize={this.handleChangeFontSize}\n              reset={this.handleReset}\n              majorNavRef={this.majorNav}\n            />\n            <div className=\"nav-placeholder\" style={{ position: navFull ? 'relative' : '' }} />\n          </div>\n        </header>\n        <Main\n          query={search.trim()}\n          example={exampleText.trim()}\n          fontSize={fontSize}\n        />\n        <button type=\"button\" className=\"to-top\" onClick={this.handleToTop} style={{ visibility: navFull ? 'visible' : 'hidden' }}>\n          <i className=\"fas fa-arrow-up\" />\n        </button>\n        <footer>\nCoded by Danielle Rubin\n          {' '}\n          <span style={{ color: 'black' }}>|</span>\n          {' '}\n2020\n          {' '}\n          <span style={{ color: 'black' }}>|</span>\n          {' '}\nChingu Pre-Work Project\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lighterGray\":\"#b8b8b8\",\"brightAccent\":\"#ff5252\",\"paleAccent\":\"rgba(255,82,82,0.16)\"};"],"sourceRoot":""}